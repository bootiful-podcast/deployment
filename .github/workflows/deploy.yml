name: Deploy Infrastructure

env:
  GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
  CONFIGURATION_SERVER_USERNAME: ${{ secrets.CONFIGURATION_SERVER_USERNAME }}
  CONFIGURATION_SERVER_PASSWORD: ${{ secrets.CONFIGURATION_SERVER_PASSWORD }}
  GCLOUD_ZONE_DEVELOPMENT: ${{ secrets.GCLOUD_ZONE_DEVELOPMENT }}
  GCLOUD_ZONE_PRODUCTION: ${{ secrets.GCLOUD_ZONE_DEVELOPMENT }}
  GCLOUD_PROJECT_DEVELOPMENT: ${{ secrets.GCLOUD_PROJECT_DEVELOPMENT }}
  GCLOUD_PROJECT_PRODUCTION: ${{ secrets.GCLOUD_PROJECT_DEVELOPMENT }}
  GCLOUD_SA_KEY: ${{ secrets.GCLOUD_SA_KEY }}
  GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true 
  CONFIGURATION_SERVER_URI_PRODUCTION: https://configuration.bootifulpodcast.fm
  CONFIGURATION_SERVER_URI_DEVELOPMENT: https://configuration.development.bootifulpodcast.fm
  GKE_CLUSTER_NAME_PRODUCTION: ${{ secrets.GKE_CLUSTER_NAME_PRODUCTION }}
  GKE_CLUSTER_NAME_DEVELOPMENT: ${{ secrets.GKE_CLUSTER_NAME_DEVELOPMENT }}


on:
  repository_dispatch:
    types: [ deploy-production-event, deploy-development-event ]
  create:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: bootiful-podcast/bp-mode-github-action@v34

      - name: Setup GCP environment
        uses: GoogleCloudPlatform/github-actions@0.1.2

      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCLOUD_SA_KEY }}
          project_id: ${{ secrets.GCLOUD_PROJECT }}
          export_default_credentials: true

      - run: |
          gcloud config set project $GCLOUD_PROJECT
          gcloud --quiet auth configure-docker

      - name: Deploy cluster if it doesn't exist
        run: |
          cd $GITHUB_WORKSPACE
          echo "Deploying the GKE Cluster itself"
          ./bin/deploy_gke.sh

      - run: |
          gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone "$GCLOUD_ZONE" --project $GCLOUD_PROJECT

      - name: Deploy Spring Cloud Config Server
        run: |
          kubectl create ns production
          kubectl create ns development


      - name: Deploy Spring Cloud Config Server
        run: |
          
          source $GITHUB_WORKSPACE/.github/workflows/repository_utils.sh
          source $GITHUB_WORKSPACE/.github/workflows/config_server_wait.sh

          deploy_system_app configuration-service
          
          wait_for_config_server_external_ip

          # CONFIG_IP=$( kubectl get services/configuration  -o json | jq '.spec.clusterIP' -r )
          CONFIG_IP=$( kubectl get svc configuration --output="jsonpath={.status.loadBalancer.ingress[0].ip}" )
          
          echo "The configuration service lives at ${CONFIG_IP}. "
          echo "CONFIGURATION_SERVER_HOST=${CONFIG_IP}" >> $GITHUB_ENV 


      - uses: joshlong/config-client-github-action@v29
        with:
          config-server-uri: http://${CONFIGURATION_SERVER_HOST}
          config-server-username: ${{ secrets.CONFIGURATION_SERVER_USERNAME  }}
          config-server-password: ${{ secrets.CONFIGURATION_SERVER_PASSWORD  }}
          config-server-application-id: deployment
          config-server-profile: ${{ env.BP_MODE_LOWERCASE }}

      - name: Deploy
        run: |
          ${GITHUB_WORKSPACE}/bin/deploy_system.sh

